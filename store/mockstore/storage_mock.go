// generated by gen-mocks; DO NOT EDIT

package mockstore

import (
	"golang.org/x/net/context"
	"src.sourcegraph.com/sourcegraph/go-sourcegraph/sourcegraph"
	"src.sourcegraph.com/sourcegraph/store"
)

type Storage struct {
	Create_    func(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageError, error)
	RemoveAll_ func(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageError, error)
	Read_      func(ctx context.Context, opt *sourcegraph.StorageReadOp) (*sourcegraph.StorageRead, error)
	Write_     func(ctx context.Context, opt *sourcegraph.StorageWriteOp) (*sourcegraph.StorageWrite, error)
	Stat_      func(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageStat, error)
	ReadDir_   func(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageReadDir, error)
	Close_     func(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageError, error)
}

func (s *Storage) Create(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageError, error) {
	return s.Create_(ctx, opt)
}

func (s *Storage) RemoveAll(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageError, error) {
	return s.RemoveAll_(ctx, opt)
}

func (s *Storage) Read(ctx context.Context, opt *sourcegraph.StorageReadOp) (*sourcegraph.StorageRead, error) {
	return s.Read_(ctx, opt)
}

func (s *Storage) Write(ctx context.Context, opt *sourcegraph.StorageWriteOp) (*sourcegraph.StorageWrite, error) {
	return s.Write_(ctx, opt)
}

func (s *Storage) Stat(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageStat, error) {
	return s.Stat_(ctx, opt)
}

func (s *Storage) ReadDir(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageReadDir, error) {
	return s.ReadDir_(ctx, opt)
}

func (s *Storage) Close(ctx context.Context, opt *sourcegraph.StorageName) (*sourcegraph.StorageError, error) {
	return s.Close_(ctx, opt)
}

var _ store.Storage = (*Storage)(nil)
