{
  "name": "node-source-walk",
  "version": "2.0.0",
  "description": "Execute a callback on every node of a source code's AST and stop walking when you see fit",
  "main": "index.js",
  "scripts": {
    "test": "mocha test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mrjoelkemp/node-source-walk.git"
  },
  "keywords": [
    "ast",
    "traversal",
    "acorn",
    "static analysis"
  ],
  "author": {
    "name": "Joel Kemp",
    "email": "joel@mrjoelkemp.com",
    "url": "http://www.mrjoelkemp.com/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mrjoelkemp/node-source-walk/issues"
  },
  "homepage": "https://github.com/mrjoelkemp/node-source-walk",
  "dependencies": {
    "acorn": "~2.0.4"
  },
  "devDependencies": {
    "mocha": "~2.0.1",
    "sinon": "~1.12.2"
  },
  "readme": "### node-source-walk [![npm](http://img.shields.io/npm/v/node-source-walk.svg)](https://npmjs.org/package/node-source-walk) [![npm](http://img.shields.io/npm/dm/node-source-walk.svg)](https://npmjs.org/package/node-source-walk)\n\n> Execute a callback on every node of a file's AST and stop walking whenever you see fit.\n\n*A variation of [substack/node-detective](https://github.com/substack/node-detective)\nand simplification of [substack/node-falafel](https://github.com/substack/node-falafel).*\n\n`npm install node-source-walk`\n\n### Usage\n\n```javascript\n  var Walker = require('node-source-walk');\n\n  var walker = new Walker();\n\n  // Assume src is the string contents of myfile.js\n  // or the AST of an outside parse of myfile.js\n\n  walker.walk(src, function (node) {\n    if (/* some condition */) {\n      // No need to keep traversing since we found what we wanted\n      walker.stopWalking();\n    }\n  });\n\n```\n\nBy default, Walker will use `acorn` supporting ES6 and the `sourceType: module`, but you can change any of the defaults as follows:\n\n```js\nvar walker = new Walker({\n  ecmaVersion: 5,\n  sourceType: 'script'\n});\n```\n\n* The supplied options are passed through to the parser, so you can configure it according\nto acorn's documentation: https://github.com/marijnh/acorn\n\n### Public Members\n\n`walk(src, cb)`\n\n* src: the contents of a file OR its AST (via Esprima or Acorn)\n* cb: a function that is called for every visited node\n\n`stopWalking()`\n\n* Halts further walking of the AST until another manual call of `walk`.\n* This is super-beneficial when dealing with large source files\n\n`traverse(node, cb)`\n\n* Allows you to traverse an AST node and execute a callback on it\n* Callback should expect the first argument to be an AST node, similar to `walk`'s callback.\n",
  "readmeFilename": "Readme.md",
  "_id": "node-source-walk@2.0.0",
  "_shasum": "d6057c990e4ecca3e7c52b8ccbaaf960799c4a00",
  "_resolved": "https://registry.npmjs.org/node-source-walk/-/node-source-walk-2.0.0.tgz",
  "_from": "https://registry.npmjs.org/node-source-walk/-/node-source-walk-2.0.0.tgz"
}
